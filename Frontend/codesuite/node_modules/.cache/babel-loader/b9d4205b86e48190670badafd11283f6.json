{"ast":null,"code":"import _classCallCheck from\"/home/divyansh747/major_project/Major_Project_CodeSuite/Frontend/codesuite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/divyansh747/major_project/Major_Project_CodeSuite/Frontend/codesuite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import axios from'axios';var URL='http://0.0.0.0:8080';export var USER_NAME_SESSION_ATTRIBUTE_NAME='authenticatedUser';var AuthenticationService=/*#__PURE__*/function(){function AuthenticationService(){_classCallCheck(this,AuthenticationService);}_createClass(AuthenticationService,[{key:\"executeJwtAuthenticationService\",value:function executeJwtAuthenticationService(email,password){console.log(email);return axios.post(\"\".concat(URL,\"/authenticate\"),{email:email,password:password}).catch(console.log(\"LOGIN FAILED\"));}},{key:\"userRegistrationService\",value:function userRegistrationService(email,username,password){return axios.post(\"\".concat(URL,\"/userRegistration\"),{email:email,username:username,password:password}).catch(console.log(\"SIGNUP FAILED\"));}},{key:\"registerSuccessfulLoginForJwt\",value:function registerSuccessfulLoginForJwt(email,token){sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME,email);localStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME,email);console.log(\"token: \"+token);this.setupAxiosInterceptors(this.createJWTToken(token));}},{key:\"createJWTToken\",value:function createJWTToken(token){console.log('Bearer '+token);return'Bearer '+token;}},{key:\"logout\",value:function logout(){sessionStorage.removeItem(USER_NAME_SESSION_ATTRIBUTE_NAME);localStorage.removeItem(USER_NAME_SESSION_ATTRIBUTE_NAME);}},{key:\"isUserLoggedIn\",value:function isUserLoggedIn(){var user=localStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);if(user===null)return false;return true;}},{key:\"getLoggedInUserName\",value:function getLoggedInUserName(){var user=localStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);if(user===null)return'';return user;}},{key:\"setupAxiosInterceptors\",value:function setupAxiosInterceptors(token){var _this=this;console.log(this.isUserLoggedIn());console.log(\"interceptors\"+token);axios.interceptors.request.use(function(config){console.log(\"config\");if(_this.isUserLoggedIn()){console.log(\"YES\");config.headers['Authorization']=token;console.log(token);}return config;});}}]);return AuthenticationService;}();export default new AuthenticationService();","map":{"version":3,"sources":["/home/divyansh747/major_project/Major_Project_CodeSuite/Frontend/codesuite/src/Service/AuthenticationService.js"],"names":["axios","URL","USER_NAME_SESSION_ATTRIBUTE_NAME","AuthenticationService","email","password","console","log","post","catch","username","token","sessionStorage","setItem","localStorage","setupAxiosInterceptors","createJWTToken","removeItem","user","getItem","isUserLoggedIn","interceptors","request","use","config","headers"],"mappings":"gYAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,GAAG,CAAG,qBAAZ,CAEA,MAAO,IAAMC,CAAAA,gCAAgC,CAAG,mBAAzC,C,GAEDC,CAAAA,qB,wLAEF,yCAAgCC,KAAhC,CAAuCC,QAAvC,CAAiD,CAC7CC,OAAO,CAACC,GAAR,CAAYH,KAAZ,EACA,MAAOJ,CAAAA,KAAK,CACXQ,IADM,WACEP,GADF,kBACsB,CACzBG,KAAK,CAALA,KADyB,CAEzBC,QAAQ,CAARA,QAFyB,CADtB,EAIJI,KAJI,CAKHH,OAAO,CAACC,GAAR,CAAY,cAAZ,CALG,CAAP,CAOH,C,uCAED,iCAAwBH,KAAxB,CAA+BM,QAA/B,CAAyCL,QAAzC,CAAmD,CAC/C,MAAOL,CAAAA,KAAK,CAACQ,IAAN,WAAcP,GAAd,sBAAsC,CACzCG,KAAK,CAALA,KADyC,CAEzCM,QAAQ,CAARA,QAFyC,CAGzCL,QAAQ,CAARA,QAHyC,CAAtC,EAIJI,KAJI,CAKHH,OAAO,CAACC,GAAR,CAAY,eAAZ,CALG,CAAP,CAOH,C,6CAED,uCAA8BH,KAA9B,CAAqCO,KAArC,CAA4C,CACxCC,cAAc,CAACC,OAAf,CAAuBX,gCAAvB,CAAyDE,KAAzD,EACAU,YAAY,CAACD,OAAb,CAAqBX,gCAArB,CAAuDE,KAAvD,EACAE,OAAO,CAACC,GAAR,CAAY,UAAUI,KAAtB,EACA,KAAKI,sBAAL,CAA4B,KAAKC,cAAL,CAAoBL,KAApB,CAA5B,EACH,C,8BAED,wBAAeA,KAAf,CAAsB,CAClBL,OAAO,CAACC,GAAR,CAAY,UAAYI,KAAxB,EACA,MAAO,UAAYA,KAAnB,CACH,C,sBAED,iBAAS,CACLC,cAAc,CAACK,UAAf,CAA0Bf,gCAA1B,EACAY,YAAY,CAACG,UAAb,CAAwBf,gCAAxB,EACH,C,8BAED,yBAAiB,CACb,GAAIgB,CAAAA,IAAI,CAAGJ,YAAY,CAACK,OAAb,CAAqBjB,gCAArB,CAAX,CACA,GAAIgB,IAAI,GAAK,IAAb,CAAmB,MAAO,MAAP,CAEnB,MAAO,KAAP,CACH,C,mCAED,8BAAsB,CAClB,GAAIA,CAAAA,IAAI,CAAGJ,YAAY,CAACK,OAAb,CAAqBjB,gCAArB,CAAX,CACA,GAAIgB,IAAI,GAAK,IAAb,CAAmB,MAAO,EAAP,CACnB,MAAOA,CAAAA,IAAP,CACH,C,sCAED,gCAAuBP,KAAvB,CAA8B,gBAC1BL,OAAO,CAACC,GAAR,CAAY,KAAKa,cAAL,EAAZ,EACAd,OAAO,CAACC,GAAR,CAAY,eAAeI,KAA3B,EACAX,KAAK,CAACqB,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACI,SAACC,MAAD,CAAY,CACRlB,OAAO,CAACC,GAAR,CAAY,QAAZ,EACA,GAAI,KAAI,CAACa,cAAL,EAAJ,CAA2B,CACvBd,OAAO,CAACC,GAAR,CAAY,KAAZ,EACAiB,MAAM,CAACC,OAAP,CAAe,eAAf,EAAkCd,KAAlC,CACAL,OAAO,CAACC,GAAR,CAAYI,KAAZ,EACH,CACD,MAAOa,CAAAA,MAAP,CACH,CATL,EAWH,C,qCAGL,cAAe,IAAIrB,CAAAA,qBAAJ,EAAf","sourcesContent":["import axios from 'axios'\n\nconst URL = 'http://0.0.0.0:8080'\n\nexport const USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n\nclass AuthenticationService {\n\n    executeJwtAuthenticationService(email, password) {\n        console.log(email);\n        return axios\n        .post(`${URL}/authenticate`, {\n            email,\n            password\n        }).catch(\n            console.log(\"LOGIN FAILED\")\n        )\n    }\n\n    userRegistrationService(email, username, password) {\n        return axios.post(`${URL}/userRegistration`, {\n            email,\n            username,\n            password\n        }).catch(\n            console.log(\"SIGNUP FAILED\")\n        ) \n    }\n\n    registerSuccessfulLoginForJwt(email, token) {\n        sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, email)\n        localStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, email)\n        console.log(\"token: \"+token)\n        this.setupAxiosInterceptors(this.createJWTToken(token))\n    }\n\n    createJWTToken(token) {\n        console.log('Bearer ' + token)\n        return 'Bearer ' + token\n    }\n\n    logout() {\n        sessionStorage.removeItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n        localStorage.removeItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n    }\n\n    isUserLoggedIn() {\n        let user = localStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\n        if (user === null) return false\n        \n        return true\n    }\n\n    getLoggedInUserName() {\n        let user = localStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\n        if (user === null) return ''\n        return user\n    }\n\n    setupAxiosInterceptors(token) {\n        console.log(this.isUserLoggedIn())\n        console.log(\"interceptors\"+token)\n        axios.interceptors.request.use(\n            (config) => {\n                console.log(\"config\")\n                if (this.isUserLoggedIn()) {\n                    console.log(\"YES\")\n                    config.headers['Authorization'] = token\n                    console.log(token)\n                }\n                return config\n            }\n        )\n    }\n}\n\nexport default new AuthenticationService()\n"]},"metadata":{},"sourceType":"module"}