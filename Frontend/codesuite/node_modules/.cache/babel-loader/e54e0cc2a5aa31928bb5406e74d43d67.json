{"ast":null,"code":"var _jsxFileName = \"/home/divyansh747/major_project/front-piyush/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport AuthenticationService from '../Service/AuthenticationService';\nimport { Button, Input, Jumbotron } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let emailError = \"\";\n      let passwordError = \"\";\n\n      if (!this.state.email.includes('@')) {\n        emailError = 'invalid email';\n      }\n\n      if (!this.state.password) {\n        passwordError = 'Password cannot be empty, or Please recheck you password';\n      }\n\n      if (emailError) {\n        this.setState({\n          emailError\n        });\n        return false;\n      }\n\n      if (emailError || passwordError) {\n        this.setState({\n          emailError,\n          passwordError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      emailError: '',\n      passwordError: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    const isValid = this.validate();\n\n    if (!isValid) {\n      return false;\n    }\n\n    AuthenticationService.executeJwtAuthenticationService(this.state.email, this.state.password).then(response => {\n      console.log(\"response: \" + response.data);\n      AuthenticationService.registerSuccessfulLoginForJwt(this.state.email, response.data);\n      this.props.history.push(`/home`);\n    }).catch(() => {\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'white'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [this.state.hasLoginFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            children: \"Invalid Credentials. Please enter valid E-mail/Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 51\n          }, this), this.state.showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Login Sucessful\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 55\n          }, this), \"Email: \", /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"email\",\n            value: this.state.email,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 12,\n              color: \"red\"\n            },\n            children: [\" \", this.state.emailError, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this), \"Password: \", /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            name: \"password\",\n            value: this.state.password,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 12,\n              color: \"red\"\n            },\n            children: [\" \", this.state.passwordError, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-success\",\n            onClick: this.loginClicked,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/divyansh747/major_project/front-piyush/src/components/Login.js"],"names":["React","Component","AuthenticationService","Button","Input","Jumbotron","Link","Login","constructor","props","validate","emailError","passwordError","state","email","includes","password","setState","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","target","name","value","isValid","executeJwtAuthenticationService","then","response","console","log","data","registerSuccessfulLoginForJwt","history","push","catch","render","color","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AuthenticationService from '../Service/AuthenticationService';\nimport { Button, Input, Jumbotron} from 'reactstrap'\nimport { Link } from 'react-router-dom';\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            email: '',\n            password: '',\n            emailError: '',\n            passwordError: '',\n            hasLoginFailed: false,\n            showSuccessMessage: false,\n            }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]: event.target.value\n            }\n        )\n    }\n\n    validate = () => {\n        let emailError = \"\";\n        let passwordError = \"\";\n         \n        if (!this.state.email.includes('@')) {\n            emailError = 'invalid email';\n        }\n\n        if (!this.state.password) {\n            passwordError = 'Password cannot be empty, or Please recheck you password';\n        }\n        if(emailError) {\n            this.setState({emailError})\n            return false;\n        }\n\n        if (emailError || passwordError) {\n            this.setState({ emailError, passwordError });\n            return false;\n        }\n\n        return true;\n    }\n\n    loginClicked() {\n        const isValid = this.validate();\n        if (!isValid) {\n            return false;    \n        }\n        \n         AuthenticationService\n             .executeJwtAuthenticationService(this.state.email, this.state.password)\n             .then((response) => {\n                 console.log(\"response: \"+response.data)\n                 AuthenticationService.registerSuccessfulLoginForJwt(this.state.email, response.data)\n                 this.props.history.push(`/home`)\n             }).catch(() => {\n                 this.setState({ showSuccessMessage: false })\n                 this.setState({ hasLoginFailed: true })\n             })\n\n    }\n\n    render() {\n        return (\n            <div\n                style={{ color: 'white' }}\n            >    \n                <center>\n                        \n                <div className=\"container\">\n                    {this.state.hasLoginFailed && <div className=\"alert alert-danger\">Invalid Credentials. Please enter valid E-mail/Password</div>}\n                    {this.state.showSuccessMessage && <div>Login Sucessful</div>}\n                    Email: <Input \n                        type=\"text\" \n                        name=\"email\" \n                        value={this.state.email} \n                        onChange={this.handleChange} \n                    />\n                    <div style={{ fontSize: 12, color: \"red\" }}> {this.state.emailError} </div>\n                    <br />\n                    Password: <Input \n                        type=\"password\" \n                        name=\"password\" \n                        value={this.state.password} \n                        onChange={this.handleChange} \n                    />\n                    <div style={{ fontSize: 12, color: \"red\" }}> {this.state.passwordError} </div>\n                    <br />\n                    <Button \n                        className=\"btn btn-success\" onClick={this.loginClicked}>Login</Button>\n                </div>\n                <br />\n                <br />\n                </center>\n            </div>\n        )\n    }\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}