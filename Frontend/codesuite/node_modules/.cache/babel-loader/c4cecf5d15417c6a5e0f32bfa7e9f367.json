{"ast":null,"code":"var _jsxFileName = \"/home/divyansh747/major_project/front-piyush/src/components/Signup.js\";\nimport React, { Component } from 'react';\nimport { Button, Input, Jumbotron } from 'reactstrap';\nimport AuthenticationService from '../Service/AuthenticationService';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let usernameError = \"\";\n      let emailError = \"\";\n      let passwordError = \"\";\n\n      if (!this.state.username) {\n        usernameError = 'Username cannot be empty';\n      }\n\n      if (!this.state.email.includes('@')) {\n        emailError = 'invalid email';\n      }\n\n      if (!this.state.password) {\n        passwordError = 'Password cannot be empty';\n      }\n\n      if (emailError) {\n        this.setState({\n          emailError\n        });\n        return false;\n      }\n\n      if (emailError || usernameError || passwordError) {\n        this.setState({\n          emailError,\n          usernameError,\n          passwordError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      usernameError: '',\n      emailError: '',\n      passwordError: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.signupClicked = this.signupClicked.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  signupClicked() {\n    const isValid = this.validate();\n\n    if (!isValid) {\n      return false;\n    }\n\n    AuthenticationService.userRegistrationService(this.state.email, this.state.username, this.state.password).then(() => {\n      this.setState({\n        showSuccessMessage: true\n      });\n      this.setState({\n        hasLoginFailed: false\n      });\n    }).catch(() => {\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"my-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"lead text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"btn btn-primary\",\n            to: \"/login\",\n            children: \"Login Here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [this.state.hasLoginFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          children: \"Email already registered!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 47\n        }, this), this.state.showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-success\",\n          children: \"Sucessfully Registered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 51\n        }, this), \"Username: \", /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"username\",\n          value: this.state.username,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: 12,\n            color: \"red\"\n          },\n          children: [\" \", this.state.usernameError, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), \"Email: \", /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"email\",\n          value: this.state.email,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: 12,\n            color: \"red\"\n          },\n          children: [\" \", this.state.emailError, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), \"Password: \", /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          name: \"password\",\n          value: this.state.password,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: 12,\n            color: \"red\"\n          },\n          children: [\" \", this.state.passwordError, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn btn-success\",\n          onClick: this.signupClicked,\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Signup;","map":{"version":3,"sources":["/home/divyansh747/major_project/front-piyush/src/components/Signup.js"],"names":["React","Component","Button","Input","Jumbotron","AuthenticationService","Link","Signup","constructor","props","validate","usernameError","emailError","passwordError","state","username","email","includes","password","setState","hasLoginFailed","showSuccessMessage","handleChange","bind","signupClicked","event","target","name","value","isValid","userRegistrationService","then","catch","render","fontSize","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Input, Jumbotron} from 'reactstrap'\nimport AuthenticationService from '../Service/AuthenticationService';\nimport { Link } from 'react-router-dom';\n\nclass Signup extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: '',\n            email: '',\n            password: '',\n            usernameError: '',\n            emailError: '',\n            passwordError: '',\n            hasLoginFailed: false,\n            showSuccessMessage: false\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.signupClicked = this.signupClicked.bind(this)\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]: event.target.value\n            }\n        )\n    }\n\n    validate = () => {\n        let usernameError= \"\";\n        let emailError = \"\";\n        let passwordError = \"\";\n         \n        if (!this.state.username) {\n            usernameError= 'Username cannot be empty'\n        }\n        if (!this.state.email.includes('@')) {\n            emailError = 'invalid email';\n        }\n\n        if (!this.state.password) {\n            passwordError = 'Password cannot be empty';\n        }\n        if(emailError) {\n            this.setState({emailError})\n            return false;\n        }\n\n        if (emailError || usernameError || passwordError) {\n            this.setState({ emailError, usernameError, passwordError });\n            return false;\n        }\n\n        return true;\n    }\n\n    signupClicked() {\n        const isValid = this.validate();\n        if (!isValid) {\n            return false;    \n        }\n        AuthenticationService\n        .userRegistrationService(this.state.email, this.state.username, this.state.password)\n        .then(() => {\n            this.setState({ showSuccessMessage: true })\n            this.setState({ hasLoginFailed: false })\n        })\n        .catch(() => {\n            this.setState({ showSuccessMessage: false })\n            this.setState({ hasLoginFailed: true })\n        })\n    }\n\n    render() {\n        return(\n            <div>            \n            <Jumbotron>\n                <h1 className=\"text-center\">Sign Up</h1>\n                <hr className=\"my-2\" />\n                <p className=\"lead text-center\">\n                <br />\n                <Link className=\"btn btn-primary\" to=\"/login\">Login Here</Link>\n                </p>\n            </Jumbotron>\n            <div className=\"container\">\n                {this.state.hasLoginFailed && <div className=\"alert alert-danger\">Email already registered!</div>}\n                {this.state.showSuccessMessage && <div className=\"alert alert-success\">Sucessfully Registered</div>}\n                Username: <Input \n                    type=\"text\" \n                    name=\"username\" \n                    value={this.state.username} \n                    onChange={this.handleChange} \n                />\n                <div style={{ fontSize: 12, color: \"red\" }}> {this.state.usernameError} </div>\n                <br />\n                Email: <Input \n                    type=\"text\" \n                    name=\"email\" \n                    value={this.state.email} \n                    onChange={this.handleChange} \n                />\n                <div style={{ fontSize: 12, color: \"red\" }}> {this.state.emailError} </div>\n\n                <br />\n                Password: <Input \n                    type=\"password\" \n                    name=\"password\" \n                    value={this.state.password} \n                    onChange={this.handleChange} \n                />\n                <div style={{ fontSize: 12, color: \"red\" }}> {this.state.passwordError} </div>\n\n                <br />\n                <Button className=\"btn btn-success\" onClick={this.signupClicked}>Signup</Button>\n            </div>\n            <br />\n            <br />\n        </div>\n        )\n    }\n}\n\nexport default Signup"]},"metadata":{},"sourceType":"module"}